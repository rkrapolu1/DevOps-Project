TemplateFormatVersion" : "2010-09-09",

 

  "Description" : "AWS CloudFormation Template Create a load balanced and Auto Scaled sample helloworld Code running on it. The application is Auto-Scaled based on the CPU utilization of the server. Notifications will be sent to the operator email address on scaling events. The instances are load balanced with a simple health check against the default web page.",

 

  "Parameters" : {

   

    "InstanceType" : {

      "Description" : "Test Server EC2 instance type",

      "Type" : "String",

      "Default" : "t2.micro",

      "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"]

,

      "ConstraintDescription" : "must be a valid EC2 instance type."

    },

 

    "KeyName" : {

      "Description" : "The EC2 Key Pair to allow SSH access to the instances",

      "Type" : "AWS::EC2::KeyPair::KeyName",

      "Default" : "Test.pem",

      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."

    },

 

    "BaseImageId" : {

      "Description" : "Base image to be used to spin up ec2 instances",

      "Type" : "String",

      "Default" : "ami-xxxxxxx",

      "ConstraintDescription" : "must be the name of an existing AMI ID."

    },

   

    "InstanceSecurityGroup" : {

      "Description" : "Server security group",

      "Type" : "String",

      "Default" : "sg-xxxxxxx",

      "ConstraintDescription" : "Server security group"

    },

   

    "MinInstances" : {

      "Description" : "Minimum number of instances in sacling group",

      "Type" : "String",

      "Default" : "1"

    },

   

    "MaxInstances" : {

      "Description" : "Maximum number of instances in sacling group",

      "Type" : "String",

      "Default" : "1"

    },  

   

    "InstanceSubnets" : {

      "Description" : "A list of subnet identifiers of Amazon Virtual Private Cloud (Amazon VPCs). The subnets that you specify for VPCZoneIdentifier must reside in the Availability Zones that you specify with the AvailabilityZones parameter.",

      "Default" : "subnet-xxxxxxx",

      "Type" : "List<AWS::EC2::Subnet::Id>"

    },

   

    "SSHLocation" : {     

      "Description" : "The IP address range that can be used to SSH to the EC2 instances",

      "Type": "String",

      "MinLength": "9",

      "MaxLength": "18",

      "Default": "0.0.0.0/0",

      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",

      "ConstraintDescription": "must be a valid IP CIDR range of the form 0.0.0.0/0."

    }

   

  },

 

  "Resources" : {

   

    "TestServerGroup" : {

      "Type" : "AWS::AutoScaling::AutoScalingGroup",

      "Properties" : {

        "AvailabilityZones" : [ "us-east-1d" ],

        "LaunchConfigurationName" : { "Ref" : "LaunchConfig" },

        "MinSize" : { "Ref" : "MinInstances"},

        "MaxSize" : { "Ref" : "MaxInstances"},

        "VPCZoneIdentifier" : { "Ref" : "InstanceSubnets" } 

                    }

    },

    "LaunchConfig" : {

      "Type" : "AWS::AutoScaling::LaunchConfiguration",

            

      "Properties" : {

        "KeyName" : { "Ref" : "KeyName" },

        "ImageId" : { "Ref" : "BaseImageId" },

        "SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],

        "InstanceType" : { "Ref" : "InstanceType" }      

                    }

    },

    "TestServerScaleUpPolicy" : {

      "Type" : "AWS::AutoScaling::ScalingPolicy",

      "Properties" : {

        "AdjustmentType" : "ChangeInCapacity",

        "AutoScalingGroupName" : { "Ref" : "TestServerGroup" },

        "Cooldown" : "60",

        "ScalingAdjustment" : "1"

                    }

    },

   

    "TestServerScaleDownPolicy" : {

      "Type" : "AWS::AutoScaling::ScalingPolicy",

      "Properties" : {

        "AdjustmentType" : "ChangeInCapacity",

        "AutoScalingGroupName" : { "Ref" : "TestServerGroup" },

        "Cooldown" : "60",

        "ScalingAdjustment" : "-1"

                    }

    },

 

    "CPUAlarmHigh": {

     "Type": "AWS::CloudWatch::Alarm",

     "Properties": {

        "AlarmDescription": "Scale-up if CPU > 90% for 10 minutes",

        "MetricName": "CPUUtilization",

        "Namespace": "AWS/EC2",

        "Statistic": "Average",

        "Period": "300",

        "EvaluationPeriods": "2",

        "Threshold": "90",

        "AlarmActions": [ { "Ref": "TestServerScaleUpPolicy" } ],

        "Dimensions": [

          {

            "Name": "AutoScalingGroupName",

            "Value": { "Ref": "TestServerGroup" }

          }

        ],

        "ComparisonOperator": "GreaterThanThreshold"

      }

    },

   

    "CPUAlarmLow": {

     "Type": "AWS::CloudWatch::Alarm",

     "Properties": {

        "AlarmDescription": "Scale-down if CPU < 70% for 10 minutes",

        "MetricName": "CPUUtilization",

        "Namespace": "AWS/EC2",

        "Statistic": "Average",

        "Period": "300",

        "EvaluationPeriods": "2",

        "Threshold": "70",

        "AlarmActions": [ { "Ref": "TestServerScaleDownPolicy" } ],

        "Dimensions": [

          {

            "Name": "AutoScalingGroupName",

            "Value": { "Ref": "TestServerGroup" }

          }

        ],

        "ComparisonOperator": "LessThanThreshold"

      }

    }

  }

}
